"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HitsPerPage = HitsPerPage;
var _react = _interopRequireDefault(require("react"));
var _cx = require("./lib/cx");
var _excluded = ["items", "onChange", "currentValue", "classNames"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
function HitsPerPage(_ref) {
  var items = _ref.items,
    _onChange = _ref.onChange,
    currentValue = _ref.currentValue,
    _ref$classNames = _ref.classNames,
    classNames = _ref$classNames === void 0 ? {} : _ref$classNames,
    props = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/_react.default.createElement("div", _extends({}, props, {
    className: (0, _cx.cx)('ais-HitsPerPage', classNames.root, props.className)
  }), /*#__PURE__*/_react.default.createElement("select", {
    className: (0, _cx.cx)('ais-HitsPerPage-select', classNames.select),
    onChange: function onChange(event) {
      _onChange(Number(event.target.value));
    },
    value: String(currentValue)
  }, items.map(function (item) {
    return /*#__PURE__*/_react.default.createElement("option", {
      key: item.value,
      className: (0, _cx.cx)('ais-HitsPerPage-option', classNames.option),
      value: item.value
    }, item.label);
  })));
}