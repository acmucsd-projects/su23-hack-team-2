"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Menu = Menu;
var _react = _interopRequireDefault(require("react"));
var _reactInstantsearchCore = require("react-instantsearch-core");
var _Menu = require("../ui/Menu");
var _excluded = ["attribute", "limit", "showMore", "showMoreLimit", "sortBy", "transformItems", "translations"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
function Menu(_ref) {
  var attribute = _ref.attribute,
    limit = _ref.limit,
    showMore = _ref.showMore,
    showMoreLimit = _ref.showMoreLimit,
    sortBy = _ref.sortBy,
    transformItems = _ref.transformItems,
    translations = _ref.translations,
    props = _objectWithoutProperties(_ref, _excluded);
  var _useMenu = (0, _reactInstantsearchCore.useMenu)({
      attribute: attribute,
      limit: limit,
      showMore: showMore,
      showMoreLimit: showMoreLimit,
      sortBy: sortBy,
      transformItems: transformItems
    }, {
      $$widgetType: 'ais.menu'
    }),
    canToggleShowMore = _useMenu.canToggleShowMore,
    isShowingMore = _useMenu.isShowingMore,
    items = _useMenu.items,
    refine = _useMenu.refine,
    createURL = _useMenu.createURL,
    toggleShowMore = _useMenu.toggleShowMore;
  var uiProps = {
    items: items,
    createURL: createURL,
    onRefine: function onRefine(item) {
      return refine(item.value);
    },
    canToggleShowMore: canToggleShowMore,
    onToggleShowMore: toggleShowMore,
    isShowingMore: isShowingMore,
    translations: _objectSpread({
      showMoreButtonText: function showMoreButtonText(options) {
        return options.isShowingMore ? 'Show less' : 'Show more';
      }
    }, translations)
  };
  return /*#__PURE__*/_react.default.createElement(_Menu.Menu, _extends({}, props, uiProps, {
    showMore: showMore
  }));
}