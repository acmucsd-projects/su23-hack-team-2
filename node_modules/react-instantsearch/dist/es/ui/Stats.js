var _excluded = ["classNames", "nbHits", "processingTimeMS", "nbSortedHits", "areHitsSorted", "translations"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React from 'react';
import { cx } from "./lib/cx.js";
export function Stats(_ref) {
  var _ref$classNames = _ref.classNames,
    classNames = _ref$classNames === void 0 ? {} : _ref$classNames,
    nbHits = _ref.nbHits,
    processingTimeMS = _ref.processingTimeMS,
    nbSortedHits = _ref.nbSortedHits,
    areHitsSorted = _ref.areHitsSorted,
    translations = _ref.translations,
    props = _objectWithoutProperties(_ref, _excluded);
  var translationOptions = {
    nbHits: nbHits,
    processingTimeMS: processingTimeMS,
    nbSortedHits: nbSortedHits,
    areHitsSorted: areHitsSorted
  };
  return /*#__PURE__*/React.createElement("div", _extends({}, props, {
    className: cx('ais-Stats', classNames.root, props.className)
  }), /*#__PURE__*/React.createElement("span", {
    className: "ais-Stats-text"
  }, translations.rootElementText(translationOptions)));
}